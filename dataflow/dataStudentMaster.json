{
	"name": "dataStudentMaster",
	"properties": {
		"folder": {
			"name": "SharmilaAssignments"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzurestudentDim",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureStudentMasterData",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "SumColumn"
				},
				{
					"name": "AvgColumn"
				},
				{
					"name": "GradeColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          StudentId as string,",
				"          StudentCode as string,",
				"          StudentName as string,",
				"          Date as string,",
				"          Language as string,",
				"          Maths as string,",
				"          Physics as string,",
				"          Chemistry as string,",
				"          ComputerScience as string,",
				"          CreatedStageDate as string,",
				"          updateddatetime as string,",
				"          updatedby as string,",
				"          isdeleted as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source1 derive(sum = toInteger(Language) + toInteger(Maths) + toInteger(Physics) + toInteger(ComputerScience) + toInteger(Chemistry)) ~> SumColumn",
				"SumColumn derive(AVG = sum/5) ~> AvgColumn",
				"AvgColumn derive(Grade = case(AVG>90, 'A2', \r",
				"AVG>80,'A1',\r",
				"AVG > 70, 'B1',\r",
				"AVG > 60, 'B2',\r",
				" AVG > 50, 'C1',\r",
				" AVG > 40, 'C2',\r",
				" AVG > 30, 'D',\r",
				"'E'\r",
				")) ~> GradeColumn",
				"GradeColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table [master].[studentinfo]'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}