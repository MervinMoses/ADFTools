{
	"name": "dataflowTest",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "dataflowus"
				},
				{
					"dataset": {
						"referenceName": "DelimitedTextAllFiles",
						"type": "DatasetReference"
					},
					"name": "dataflowcanada"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTableAlbin",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "union1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as string,",
				"          Date as string,",
				"          Zip as string,",
				"          Units as string,",
				"          Revenue as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dataflowus",
				"source(output(",
				"          ProductID as string,",
				"          Date as string,",
				"          Zip as string,",
				"          Units as string,",
				"          Revenue as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dataflowcanada",
				"dataflowus derive(Country = 'USA') ~> derivedColumn1",
				"derivedColumn1, dataflowcanada union(byName: true)~> union1",
				"union1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}